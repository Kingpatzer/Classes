#+TITLE: Innovation Management Frameworks
#+LATEX_HEADER: \shorttitle{Innovation Frameworks}
#+INCLUDE: "./preamble.org"
#+AUTHOR: David A. Wagle


* Introduction

There does not yet exist a truly comprehensive framework for Innovation Management parencite:tiddInnovationManagementContext2001, as Innovation itself remains largely ill-defined [[parencite:godinInnovationContestedIdea2015][p. 235]]. This problem is exacerbated by a lack of any clear relationship between innovation measurements and firm outcomes, as Tidd demonstrated.

Still, there exist proposed frameworks to consider, and a manager who focuses on innovation should be choosing something to work with as a starting point. This paper will examine three different frameworks in the context of innovation for large-scale Agile based IT projects. 

* The Whirlpool Model

While Whirlpool is not an IT company, primarily making "white goods" for the home, CEO David Whitwam developed an innovation model that focused on several key ideas parencite:dayChangingWorkInnovation2020 :

    1. As many employees as possible have the tools to identify customer needs
    2. Systems which drive innovation align to value streams
    3. "Every job and every process" get targeted for change over many years
    4. Metrics included both invasion goals and revenue goals
    5. Provided special training to mentors to help other employees bring forth innovative ideas
    6. Provided budget for innovation projects separate from the annual budgeting process

 These significant changes worked and Whirlpool was able to increase revenue and win multiple design awards for innovative new products introduced in the wake of these changes.

* De-risking Innovation

textcite:drakemanRiskDeRiskingInnovation2020 propose a research based model that was developed looking the biotechnology sector. Their model focuses on the following key ideas:

    1. Parallel searches for breakthroughs, ideas should have multiple teams pursuing them using different methods
    2. Avoid technology myopia, pursue ideas using both familiar and unfamiliar technology frameworks
    3. Focus on interesting ideas, regardless of risk, let people explore what they are passionate about
    4. Quickly and ruthlessly terminate failing searches, avoid putting resources into dead ends
    5. Reward volume and diversity of ideas

This model has the benefit of being developed after an extensive examination of actual success patterns in one industry. But as the authors note, many companies in that industry that followed this advice still failed. However, across the industry as a whole, these ideas are common to successful companies. 

* Innovation as Strategic Management

Similar to the prior model, textcite:negulescuInnovationManagementSource2020 looked at trying to find commonalities across multiple researchers. The idea put forward, notably without practical evidence, consists of a few key points:

    1. Explore products/services utilizing market analysis and attribute analysis
    2. Create new products/services by eliminating and adding attributes
    3. Align products/process to value chains and manage the value chain lifecycles
    4. Sustain innovation by supplying creative people with sufficient conditions and budgets 
    5. Pursue continuous improvement as a corporate goal

* Comparing These Models

Of these models, the first two rest on practical, real-world results. The third is theoretical. While the ideas presented in the third are laudable, they are, by themselves, lacking enough specificity to be particular useful. The third model is so removed from practical advice as to be non-comparable to the other two. 

The remaining two have several commonalities: allow for people to explore what interests them; allow exploration of a wide range of parallel ideas; disassociate risk from reward - allow for failure. They also have some significant differences. The second model, for example, explicitly calls out the need to avoid "technology myopia" and to encourage utilizing as wide a range of technologies as feasible. The first model, by contrast focuses more on ensuring availability of financial resources and fully covering all of the companies products and processes for revamp. While both focus on budget, the second focuses on saving budget dollars by "failing fast," whereas the first focuses on initial access to funds to start exploring an area of concern. 

* Which works best in an "Agile" IT Environment

Of these, the first makes the most sense for the type of large-scale IT environment I normally work within. Focusing on ensuring no product, process, or service is not addressed for revamp is an important part of avoiding technical debt, dreaded "old code," that must be revisited and updated simply to continue working well. Further, having as many people as possible considering customer perspectives is of real value when trying to develop for a large, diverse audience.  Parallel searches are also very important when exploring new technology solutions. However, technology lock-in is a necessary condition of certain efficiencies to be had in IT systems, and it is likely misguided to overtly seek to avoid technology myopia in all case when talking about large systems.

Two things that should be added to the concept for large IT systems in an agile environment are:

    1. Incorporate value stream budgeting - end the idea of a "project". 
    2. Fail fast

The first is a needed area of improvement in numerous companies. "Projects" as traditionally defined have a prescribed start and end date. IT Systems are very rarely projects. They are ongoing strategic assets that must be cared for, and should be budgeted for as value streams, not as projects. The second is simply good advice, if something isn't working out, then scrap that idea and move to a new one. The focus should be on making the most advances as quickly as possible, and utilizing what is learned from each advance to fuel future innovation. If teams fixate on intractable problems, they will fail both to learn as much as possible and to deliver as much value as possible. 
    
   


\printbibliography

* 
* 

